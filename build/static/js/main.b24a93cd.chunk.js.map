{"version":3,"sources":["utils/Auth.js","components/Nav.js","layout/MainLayout.js","pages/Home.js","components/ProductItem.jsx","pages/Products.js","components/ProductCard.jsx","components/TicketLine.jsx","pages/MaCagette.js","pages/Signup.js","pages/Login.js","utils/Logout.js","components/AddressForm.jsx","components/AddressCard.jsx","pages/Confirmation.js","pages/ConfirmedOrder.jsx","components/ProtectedRoute.js","App.js","serviceWorker.js","index.js"],"names":["Auth","domain","this","process","login","bind","firstName","lastName","phone","emailAddress","password","axios","method","url","baseURL","headers","data","qs","stringify","withCredentials","then","response","setUser","user","catch","error","console","log","getUser","localStorage","setItem","JSON","parse","getItem","res","clear","auth","Nav","state","className","to","src","alt","props","location","pathname","loggedIn","Component","withRouter","MainLayout","children","home","setState","ProductItem","style","backgroundColor","color","opacity","image","name","Products","products","get","err","allProducts","map","product","index","key","toString","image1","ProductCard","changeButtonClass","prevState","active","buttonChange","id","btnClass","onClick","total","price","TicketLine","MaCagette","confirmButton","activeButtons","history","push","changeButton","activity","items","i","length","splice","find","oneProduct","_id","itemPrice","Number","allItems","item","foundProduct","getProduct","Signup","handleFormSubmit","e","preventDefault","signup","message","handleFormChange","target","value","onSubmit","type","placeholder","onChange","required","phoneNumber","pattern","Login","Logout","logout","AddressForm","saveAddress","number","street","postcode","city","addressEdit","address","AddressCard","addressChange","Confirmation","orderButton","list","undefined","edit","parseInt","updatedUser","ConfirmedOrder","ald","ProtectedRoute","component","redirectUrl","rest","render","from","App","exact","path","Home","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"olBAGqBA,E,WACjB,WAAYC,GAAS,oBACjBC,KAAKD,OAASA,GAAUE,mCACxBD,KAAKE,MAAQF,KAAKE,MAAMC,KAAKH,M,sDAG6B,IAAD,OAArDI,EAAqD,EAArDA,UAAWC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,SAC9C,OAAOC,IAAM,CACTC,OAAQ,OACRC,IAAK,UACLC,QAASZ,KAAKD,OACdc,QAAS,CAAE,eAAgB,qCAC3BC,KAAMC,IAAGC,UAAU,CAACZ,YAAWC,WAAUC,QAAOC,eAAcC,aAC9DS,iBAAiB,IAEpBC,KAAK,SAACC,GACH,EAAKC,QAAQD,EAASL,KAAKO,QAE9BC,MAAM,SAAAC,GACHC,QAAQC,IAAIF,O,4BAIdhB,EAAcC,GAAW,IAAD,OAC1B,OAAOC,IAAM,CACTC,OAAQ,OACRC,IAAK,SACLC,QAASZ,KAAKD,OACdc,QAAS,CAAE,eAAgB,qCAC3BC,KAAMC,IAAGC,UAAU,CAACT,eAAcC,aAClCS,iBAAiB,IAEpBC,KAAK,SAACC,GACH,EAAKC,QAAQD,EAASL,KAAKO,QAE9BC,MAAM,SAAAC,GACHC,QAAQC,IAAIF,O,iCAMhB,QADavB,KAAK0B,Y,8BAIdL,GACJM,aAAaC,QAAQ,OAAQC,KAAKb,UAAUK,M,gCAI5C,IACI,OAAOQ,KAAKC,MAAMH,aAAaI,QAAQ,SACzC,MAAMR,GACJ,U,+BAKL,OAAOd,IAAM,CACRG,QAASZ,KAAKD,OACdY,IAAK,YAERO,KAAK,SAACc,GACHL,aAAaM,UAEhBX,MAAM,SAAAC,GACHC,QAAQC,IAAIF,S,KCjElBW,EAAO,IAAIpC,EAEXqC,E,2MAEFC,MAAQ,CACJf,KAAM,M,wEAIN,OACI,yBAAKgB,UAAU,OACX,kBAAC,IAAD,CAAMC,GAAG,KACL,yBAAKD,UAAU,mBACP,6BAAK,yBAAKE,IAAI,oBAAoBC,IAAI,UACtC,6BAAK,6CAGjB,yBAAKH,UAAU,kBACX,yBAAKA,UAA4C,kBAAjCrC,KAAKyC,MAAMC,SAASC,SAAgC,mBAAqB,aAAa,kBAAC,IAAD,CAAML,GAAG,iBAAT,iBACtG,yBAAKD,UAA4C,gBAAjCrC,KAAKyC,MAAMC,SAASC,UAA+D,aAAjC3C,KAAKyC,MAAMC,SAASC,SAA2B,mBAAqB,aAAa,kBAAC,IAAD,CAAML,GAAG,eAAT,eAClJJ,EAAKU,WACN,yBAAKP,UAAU,aAAY,kBAAC,IAAD,CAAMC,GAAG,WAAT,WAE3B,yBAAKD,UAA4C,WAAjCrC,KAAKyC,MAAMC,SAASC,SAAyB,mBAAqB,aAAa,kBAAC,IAAD,CAAML,GAAG,UAAT,gB,GArBjGO,aA6BHC,cAAWX,GCvBXY,EATI,SAACN,GAChB,OACI,oCACI,kBAAC,EAAD,MACCA,EAAMO,WCuCJC,G,kBAvCX,aAAe,IAAD,8BACV,+CACKb,MAAQ,CACXf,KAAM,MAHE,E,iFAQV,IAAMA,EAAOM,aAAaI,QAAQ,QAClC/B,KAAKkD,SAAS,CAAE7B,W,+BAIhB,OACI,yBAAKgB,UAAU,QACX,yBAAKA,UAAU,iBACX,6BAAK,yBAAKE,IAAI,oBAAoBC,IAAI,UACtC,yBAAKH,UAAU,mBACX,uBAAGA,UAAU,MAAb,QACA,uBAAGA,UAAU,MAAb,SACA,uBAAGA,UAAU,MAAb,WACA,uBAAGA,UAAU,qBAAb,+UAEqB,OAApBrC,KAAKoC,MAAMf,KACZ,oCACA,kBAAC,IAAD,CAAMiB,GAAG,WAAU,4CACnB,kBAAC,IAAD,CAAMA,GAAG,UAAS,2CAGlB,qC,GA/BLO,cCaJM,G,6LAVP,OACI,yBAAKd,UAAU,cAAce,MAAO,CAACC,gBAAiBrD,KAAKyC,MAAMa,MAAOC,QAAS,KAC7E,yBAAKhB,IAAKvC,KAAKyC,MAAMe,MAAOhB,IAAI,WAChC,2BAAIxC,KAAKyC,MAAMgB,MACf,kBAAC,IAAD,CAAMnB,GAAG,KAAT,kB,GARUO,cC8CXa,E,YA3Cf,aAAc,IAAD,8BACT,+CACKtB,MAAQ,CACTuB,SAAU,IAHL,E,iFAOQ,IAAD,OAChBlD,IAAMmD,IAAI3D,mCAA2B,CAACgB,iBAAiB,IACtDC,KAAK,SAAAC,GACF,EAAK+B,SAAS,CAACS,SAAUxC,EAASL,SAErCQ,MAAM,SAAAuC,GACHrC,QAAQC,IAAIoC,O,+BAKhB,IAAIC,EAAc9D,KAAKoC,MAAMuB,SAASI,IAAI,SAACC,EAASC,GAChD,OACI,kBAAC,EAAD,CACAC,IAAKD,EAAME,WACXV,KAAMO,EAAQP,KACdH,MAAOU,EAAQV,MACfE,MAAOQ,EAAQI,WAGvB,OACI,6BACI,yBAAK/B,UAAU,0BACX,8JAGJ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,gBACVyB,S,GArCEjB,a,eCmCRwB,G,kBAnCX,aAAc,IAAD,8BACT,+CAYJC,kBAAoB,WAChB,EAAKpB,SAAS,SAAAqB,GAAS,MAAK,CACxBC,QAASD,EAAUC,UAEvB,EAAK/B,MAAMgC,aAAa,EAAKrC,MAAMoC,OAAQ,EAAKpC,MAAMsC,KAdtD,EAAKtC,MAAQ,CACToC,QAAQ,EACRE,GAAI,MALC,E,iFAUT1E,KAAKkD,SAAS,CAACwB,GAAI1E,KAAKyC,MAAMiC,O,+BAUxB,IAAD,OACDC,EAAW3E,KAAKoC,MAAMoC,OAAS,aAAe,iBAElD,OACI,yBAAKnC,UAAU,gBACX,4BAAQA,UAAWsC,EAAUC,QAAS,WAClC,EAAKN,oBACL,EAAK7B,MAAMoC,MAAM,EAAKzC,MAAMoC,OAAQ,EAAK/B,MAAMqC,SAChD,yBAAKvC,IAAI,oBAAoBC,IAAI,YACpC,2BAAIxC,KAAKyC,MAAMgB,W,GA/BLZ,c,sBCYXkC,E,iLATP,OACI,yBAAK1C,UAAU,cACX,6BAAK,0BAAMA,UAAU,UAAS,kBAAE,IAAF,OAA9B,IAAoDrC,KAAKyC,MAAMgB,KAAK,0BAAMpB,UAAU,YAAhB,gB,GAJ3DQ,aC+HVmC,E,YA5Hb,aAAe,IAAD,8BACZ,+CAwDJC,cAAgB,WAAQ,IAAD,EACY,EAAK7C,MAA9ByC,EADa,EACbA,MAAOK,EADM,EACNA,cACfvD,aAAaC,QAAQ,QAASiD,GAC9BlD,aAAaC,QAAQ,OAAQsD,GAC7B,EAAKzC,MAAM0C,QAAQC,KAAK,aA3DtB,EAAKhD,MAAQ,CACXuB,SAAU,GACVuB,cAAe,GACfL,MAAO,GAET,EAAKQ,aAAe,EAAKA,aAAalF,KAAlB,gBACpB,EAAK0E,MAAQ,EAAKA,MAAM1E,KAAX,gBARD,E,iFAYO,IAAD,OAClBM,IACGmD,IAAI3D,mCAA2B,CAAEgB,iBAAiB,IAClDC,KAAK,SAAAC,GACJ,EAAK+B,SAAS,CAAES,SAAUxC,EAASL,W,mCAK5BwE,EAAUZ,GACrB,GAAKY,EAEE,CAEL,IADA,IAAIC,EAAK,YAAOvF,KAAKoC,MAAM8C,eAClBM,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAC5BD,EAAMC,KAAOd,IACfa,EAAMG,OAAOF,EAAG,GAChBA,KAGJxF,KAAKkD,SAAS,CAAEgC,cAAeK,SAT/BvF,KAAKkD,SAAS,CAAEgC,cAAc,GAAD,mBAAMlF,KAAKoC,MAAM8C,eAAjB,CAAgCR,MAW/D1E,KAAK6E,U,iCAIIH,GAIT,OAHY1E,KAAKoC,MAAMuB,SAASgC,KAAK,SAAAC,GACjC,OAAQA,EAAWC,MAAQnB,M,4BAM3BY,EAAUQ,GACd,IAAIjB,EAIFA,EAHGS,EAGKtF,KAAKoC,MAAMyC,MAAQkB,OAAOD,GAF1B9F,KAAKoC,MAAMyC,MAAQkB,OAAOD,GAIpC9F,KAAKkD,SAAS,CAAC2B,MAAOA,M,+BAWd,IAAD,OAGHf,EAAc9D,KAAKoC,MAAMuB,SAASI,IAAI,SAACC,EAASC,GAClD,OACE,kBAAC,EAAD,CACEC,IAAKD,EAAME,WACXV,KAAMO,EAAQP,KACdD,MAAOQ,EAAQR,MACfkB,GAAIV,EAAQ6B,IACZf,MAAOd,EAAQc,MACfL,aAAc,EAAKY,aACnBR,MAAO,EAAKA,UAMdmB,EAAWhG,KAAKoC,MAAM8C,cAAcnB,IAAI,SAACkC,EAAMhC,GACjD,IAAMiC,EAAe,EAAKC,WAAWF,GACrC,OACA,kBAAC,EAAD,CACE/B,IAAKD,EAAME,WACXO,GAAIwB,EAAaL,IACjBpC,KAAMyC,EAAazC,SAKvB,OACE,yBAAKpB,UAAU,cACb,yBAAKA,UAAU,iBACb,6JAKF,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,WAAWyB,IAE5B,yBAAKzB,UAAU,mBACb,yBAAKA,UAAU,UACd2D,EACAhG,KAAKoC,MAAM8C,cAAcO,OAAS,EACnC,yBAAKpD,UAAU,SACb,sCACA,yBAAKA,UAAU,cAAcrC,KAAKoC,MAAMyC,MAAxC,UACE,4BAAQxC,UAAU,SAASuC,QAAS5E,KAAKiF,eAAzC,YAGJ,oC,GApHYpC,aCHlBX,G,MAAO,IAAIpC,GAqHFsG,E,YAlHb,WAAY3D,GAAQ,IAAD,8BACjB,4CAAMA,KAeR4D,iBAAmB,SAAAC,GACjBA,EAAEC,iBACFrE,EAAKsE,OAAO,EAAKpE,MAAMf,MACpBH,KAAK,WACJ,EAAKgC,SAAS,CAAE3B,MAAO,KACvB,EAAKkB,MAAM0C,QAAQC,KAAK,OAEzB9D,MAAM,YAAmB,IAAhBH,EAAe,EAAfA,SACR,EAAK+B,SAAS,CAAE3B,MAAOJ,EAASL,KAAK2F,UACrCjF,QAAQC,IAAI,EAAKW,MAAMb,UAzBV,EA6BnBmF,iBAAmB,SAAAJ,GACjB,IAAIjF,EAAO,EAAKe,MAAMf,KACtBA,EAAKiF,EAAEK,OAAOlD,MAAQ6C,EAAEK,OAAOC,MAC/B,EAAK1D,SAAS,CACZ7B,KAAMA,KA9BR,EAAKe,MAAQ,CACXf,KAAM,CACJjB,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,aAAc,GACdC,SAAU,KAId,EAAK6F,iBAAmB,EAAKA,iBAAiBlG,KAAtB,gBAbP,E,sEAsCjB,OACE,yBAAKkC,UAAU,UACb,yBAAKA,UAAU,kBACf,uCACA,0BAAMwE,SAAU7G,KAAKqG,kBACrB,6BACI,6CACA,2BACES,KAAK,OACLrD,KAAK,YACLsD,YAAY,aACZH,MAAO5G,KAAKoC,MAAMhC,UAClB4G,SAAUhH,KAAK0G,iBACfO,UAAQ,KAIZ,6BACE,4CACA,2BACEH,KAAK,OACLrD,KAAK,WACLsD,YAAY,YACZH,MAAO5G,KAAKoC,MAAM/B,SAClB2G,SAAUhH,KAAK0G,iBACfO,UAAQ,KAIZ,6BACE,+CACA,2BACEH,KAAK,MACLrD,KAAK,QACLsD,YAAY,iBACZH,MAAO5G,KAAKoC,MAAM8E,YAClBF,SAAUhH,KAAK0G,iBACfS,QAAQ,kBACRF,UAAQ,KAIZ,6BACE,gDACA,2BACEH,KAAK,QACLrD,KAAK,eACLsD,YAAY,wBACZH,MAAO5G,KAAKoC,MAAM7B,aAClByG,SAAUhH,KAAK0G,iBACfO,UAAQ,KAIZ,6BACE,2CACA,2BACEH,KAAK,WACLrD,KAAK,WACLsD,YAAY,WACZH,MAAO5G,KAAKoC,MAAM5B,SAClBwG,SAAUhH,KAAK0G,iBACfO,UAAQ,KAIZ,yBAAK5E,UAAU,SACb,2BAAOyE,KAAK,SAASF,MAAM,SAASvE,UAAU,YAEhD,yBAAKE,IAAI,uBAAuBC,IAAI,kB,GA5GzBK,aCDfX,G,MAAO,IAAIpC,GA4EFsH,E,YAzEb,WAAY3E,GAAQ,IAAD,8BACjB,4CAAMA,KAYR4D,iBAAmB,SAAAC,GACjBA,EAAEC,iBACFrE,EAAKhC,MAAM,EAAKkC,MAAMf,KAAKd,aAAc,EAAK6B,MAAMf,KAAKb,UACtDU,KAAK,WACJ,EAAKgC,SAAS,CAAE3B,MAAO,KACvB,EAAKkB,MAAM0C,QAAQC,KAAK,iBAEzB9D,MAAM,YAAmB,IAAhBH,EAAe,EAAfA,SACR,EAAK+B,SAAS,CAAE3B,MAAOJ,OArBV,EAyBnBuF,iBAAmB,SAAAJ,GACjB,IAAIjF,EAAO,EAAKe,MAAMf,KACtBA,EAAKiF,EAAEK,OAAOlD,MAAQ6C,EAAEK,OAAOC,MAC/B,EAAK1D,SAAS,CACZ7B,KAAMA,KA1BR,EAAKe,MAAQ,CACXf,KAAM,CACJd,aAAc,GACdC,SAAU,KAId,EAAK6F,iBAAmB,EAAKA,iBAAiBlG,KAAtB,gBAVP,E,sEAkCjB,OACE,yBAAKkC,UAAU,SACb,qCACA,0BAAMwE,SAAU7G,KAAKqG,kBACnB,6BACE,gDACA,2BACES,KAAK,QACLrD,KAAK,eACLsD,YAAY,wBACZH,MAAO5G,KAAKoC,MAAM7B,aAClByG,SAAUhH,KAAK0G,oBAInB,6BACE,2CACA,2BACEI,KAAK,WACLrD,KAAK,WACLsD,YAAY,WACZH,MAAO5G,KAAKoC,MAAM5B,SAClBwG,SAAUhH,KAAK0G,oBAInB,yBAAKrE,UAAU,SACb,2BAAOyE,KAAK,SAASF,MAAM,SAASvE,UAAU,aAGlD,gDACkB,kBAAC,IAAD,CAAMC,GAAG,WAAT,mBAElB,yBAAKC,IAAI,uBAAuBC,IAAI,iB,GApExBK,aCJdX,EAAO,IAAIpC,EAEIuH,E,2MAEjBjF,MAAQ,CACJb,MAAO,M,mFAGS,IAAD,OACfW,EAAKoF,SACApG,KAAK,WACF,EAAKuB,MAAM0C,QAAQC,KAAK,OAE3B9D,MAAM,SAACC,GACJ,EAAK2B,SAAS,CAAC3B,MAAOA,EAAMkF,UAC5BjF,QAAQC,IAAIF,O,+BAKpB,OACI,6BACKvB,KAAKoC,MAAMb,MACR,4BAAKvB,KAAKoC,MAAMb,OAEhB,2C,GAvBgBsB,aC6IrB0E,G,wBA3IX,WAAY9E,GAAQ,IAAD,8BACf,4CAAMA,KAgBV+E,YAAc,YAA6D,IAA1DpH,EAAyD,EAAzDA,UAAWC,EAA8C,EAA9CA,SAAUoH,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,KAChE,OAAOnH,IAAM,CACTC,OAAQ,OACRC,IAAK,gBACLC,QAAS,EAAKb,OACdc,QAAS,CAAE,eAAgB,qCAC3BC,KAAMC,IAAGC,UAAU,CAACZ,YAAWC,WAAUoH,SAAQC,SAAQC,WAAUC,SACnE3G,iBAAiB,IAEpBC,KAAK,SAACc,GACH,EAAKS,MAAMoF,YAAY7F,EAAIlB,QAE9BQ,MAAM,SAAAC,GACHC,QAAQC,IAAIF,MA9BG,EAkCnB8E,iBAAmB,SAAAC,GACfA,EAAEC,iBACF,EAAKiB,YAAY,EAAKpF,MAAM0F,SACzB5G,KAAK,SAACc,GACL,EAAKkB,SAAS,CAAE3B,MAAO,OAExBD,MAAM,SAACU,GACN,EAAKkB,SAAS,CAAE3B,MAAOS,EAAIlB,KAAK2F,UAChCjF,QAAQC,IAAI,EAAKW,MAAMb,UA1CZ,EA8CnBmF,iBAAmB,SAAAJ,GACnB,IAAIwB,EAAU,EAAK1F,MAAM0F,QACzBA,EAAQxB,EAAEK,OAAOlD,MAAQ6C,EAAEK,OAAOC,MAClC,EAAK1D,SAAS,CACV4E,QAASA,KAhDT,EAAK/H,OAASE,mCACd,EAAKmC,MAAQ,CACX0F,QAAS,CACL1H,UAAW,GACXC,SAAU,GACVoH,OAAQ,GACRC,OAAQ,GACRC,SAAU,GACVC,KAAM,KAGZ,EAAKJ,YAAc,EAAKA,YAAYrH,KAAjB,gBAbJ,E,sEAuDf,OACI,yBAAKkC,UAAU,gBACX,0BAAMwE,SAAU7G,KAAKqG,kBACjB,6BACI,6CACA,2BACAS,KAAK,OACLrD,KAAK,YACLsD,YAAY,aACZH,MAAO5G,KAAKoC,MAAMhC,UAClB4G,SAAUhH,KAAK0G,iBACfO,UAAQ,KAIZ,6BACI,4CACA,2BACAH,KAAK,OACLrD,KAAK,WACLsD,YAAY,YACZH,MAAO5G,KAAKoC,MAAM/B,SAClB2G,SAAUhH,KAAK0G,iBACfO,UAAQ,KAIZ,6BACI,yCACA,2BACAH,KAAK,OACLrD,KAAK,SACLsD,YAAY,SACZH,MAAO5G,KAAKoC,MAAMqF,OAClBT,SAAUhH,KAAK0G,iBACfO,UAAQ,KAIZ,6BACI,yCACA,2BACAH,KAAK,OACLrD,KAAK,SACLsD,YAAY,SACZH,MAAO5G,KAAKoC,MAAMsF,OAClBV,SAAUhH,KAAK0G,iBACfO,UAAQ,KAIZ,6BACI,4CACA,2BACAH,KAAK,OACLrD,KAAK,WACLsD,YAAY,YACZH,MAAO5G,KAAKoC,MAAMuF,SAClBX,SAAUhH,KAAK0G,iBACfO,UAAQ,KAIZ,6BACI,uCACA,2BACAH,KAAK,OACLrD,KAAK,OACLsD,YAAY,OACZH,MAAO5G,KAAKoC,MAAMwF,KAClBZ,SAAUhH,KAAK0G,iBACfO,UAAQ,KAIZ,yBAAK5E,UAAU,SACX,2BAAOyE,KAAK,SAASF,MAAM,OAAOvE,UAAU,kB,GApI1CQ,cCgBXkF,G,uLAfP,OACG,yBAAK1F,UAAU,eACX,6BACC,2BAAIrC,KAAKyC,MAAMqF,QAAQ1H,UAAvB,IAAmCJ,KAAKyC,MAAMqF,QAAQzH,UACtD,2BAAIL,KAAKyC,MAAMqF,QAAQL,OAAvB,IAAgCzH,KAAKyC,MAAMqF,QAAQJ,QACnD,2BAAI1H,KAAKyC,MAAMqF,QAAQH,SAAvB,IAAkC3H,KAAKyC,MAAMqF,QAAQF,OAEtD,6BACC,4BAAQhD,QAAS5E,KAAKyC,MAAMuF,eAA5B,c,GAXUnF,cC2FXoF,E,YArFb,WAAYxF,GAAQ,IAAD,8BACjB,4CAAMA,KA+BRyF,YAAc,SAAC7G,EAAM8G,GACnB,OAAO1H,IAAM,CACXC,OAAQ,OACRC,IAAK,SACLC,QAAS,EAAKb,OACdc,QAAS,CAAE,eAAgB,qCAC3BC,KAAMC,IAAGC,UAAU,CAACK,OAAM8G,SAC1BlH,iBAAiB,IAEpBC,KAAK,SAACc,GACHR,QAAQC,IAAIO,GACZ,EAAKS,MAAM0C,QAAQC,KAAK,sBAE3B9D,MAAM,SAAAC,GACHC,QAAQC,IAAIF,MA5Cd,EAAKxB,OAASE,mCACd,EAAKmC,MAAQ,CACXyC,WAAOuD,EACPD,UAAMC,EACN/G,UAAM+G,EACNC,UAAMD,GAER,EAAKJ,cAAgB,EAAKA,cAAc7H,KAAnB,gBACrB,EAAK0H,YAAc,EAAKA,YAAY1H,KAAjB,gBAVF,E,iFAejB,IAAI0E,EAAQyD,SAAS3G,aAAaI,QAAQ,UACtCoG,EAAOxG,aAAaI,QAAQ,QAC5BV,EAAOQ,KAAKC,MAAMH,aAAaI,QAAQ,SAC3C/B,KAAKkD,SAAS,CAAC2B,QAAOsD,OAAM9G,W,sCAK5BrB,KAAKkD,SAAS,CAACmF,MAAM,M,kCAIXE,GACVvI,KAAKkD,SAAS,CAACmF,MAAM,EAAOhH,KAAMkH,M,+BAsBzB,IAAD,OAEN,OACE,yBAAKlG,UAAU,gBACZ,yBAAKA,UAAU,iBACZ,mDAEJ,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,kBACb,qDACqB+F,IAApBpI,KAAKoC,MAAMf,MAAsBrB,KAAKoC,MAAMf,KAAKyG,QAClD,kBAAC,EAAD,CAAaE,cAAehI,KAAKgI,cAAeF,QAAS9H,KAAKoC,MAAMf,KAAKyG,UAEzE,kBAAC,EAAD,CAAaD,YAAa7H,KAAK6H,eAGjC,yBAAKxF,UAAU,oBACZrC,KAAKoC,MAAMiG,KACZ,kBAAC,EAAD,CAAaR,YAAa7H,KAAK6H,cAE/B,+BAGF,yBAAKxF,UAAU,mBACb,6CACA,sCAAYrC,KAAKoC,MAAMyC,MAAvB,UACA,4BAAQD,QAAS,WAAO,EAAKsD,YAAY,EAAK9F,MAAMf,KAAM,EAAKe,MAAM+F,QAArE,oBACA,kBAAC,IAAD,CAAM7F,GAAG,eAAT,4B,GA9EaO,aC6BZ2F,G,kBAjCX,WAAY/F,GAAQ,IAAD,8BACf,4CAAMA,KACDL,MAAQ,CACXf,UAAM+G,GAHO,E,iFASnB,IAAIvD,EAAQyD,SAAS3G,aAAaI,QAAQ,UACtCoG,EAAOxG,aAAaI,QAAQ,QAC5BV,EAAOQ,KAAKC,MAAMH,aAAaI,QAAQ,SAC3C/B,KAAKkD,SAAS,CAAC2B,QAAOsD,OAAM9G,W,+BAIxB,OACI,yBAAKgB,UAAU,mBACZ,yBAAKA,UAAU,iBACZ,gDAEJ,yBAAKA,UAAU,kBACX,yBAAKE,IAAI,qBAAqBkG,IAAI,SACpC,yBAAKpG,UAAU,qBACX,uCACA,mC,GA1BSQ,c,QCAvBX,EAAO,IAAIpC,EAkBF4I,EAhBS,SAAC,GAAkD,IAAtC7F,EAAqC,EAAhD8F,UAAsBC,EAA0B,EAA1BA,YAAgBC,EAAU,2CACxE,OACI,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAS,SAAArG,GAEL,OADWP,EAAKR,UAEP,kBAACmB,EAAcJ,GAEf,kBAAC,IAAD,CAAUH,GAAI,CAACK,SAAUiG,GAAe,IAAKxG,MAAO,CAAC2G,KAAMtG,EAAMC,kBCoBvEsG,G,uLAjBX,OACE,yBAAK3G,UAAU,OACb,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAO4G,OAAK,EAACC,KAAK,IAAIP,UAAWQ,IACjC,kBAAC,IAAD,CAAOD,KAAK,gBAAgBP,UAAWjF,IACvC,kBAAC,IAAD,CAAOwF,KAAK,UAAUP,UAAWvC,IACjC,kBAAC,IAAD,CAAO8C,KAAK,SAASP,UAAWvB,IAChC,kBAAC,IAAD,CAAO8B,KAAK,UAAUP,UAAWtB,IACjC,kBAAC,IAAD,CAAO6B,KAAK,mBAAmBP,UAAWH,IAC1C,kBAAC,EAAD,CAAgBI,YAAY,SAASM,KAAK,cAAcP,UAAW3D,IACnE,kBAAC,EAAD,CAAgB4D,YAAY,SAASM,KAAK,WAAWP,UAAWV,U,GAZxDpF,cCHEuG,QACW,cAA7BC,OAAO3G,SAAS4G,UAEe,UAA7BD,OAAO3G,SAAS4G,UAEhBD,OAAO3G,SAAS4G,SAASC,MACvB,2DCTNC,IAASV,OACL,kBAAC,IAAD,KACI,kBAAC,EAAD,OAEJW,SAASC,eAAe,SDoHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3I,KAAK,SAAA4I,GACjCA,EAAaC,iB","file":"static/js/main.b24a93cd.chunk.js","sourcesContent":["import axios from \"axios\";\nimport qs from \"querystring\";\n\nexport default class Auth {\n    constructor(domain) {\n        this.domain = domain || process.env.REACT_APP_API;\n        this.login = this.login.bind(this);\n    }\n\n    signup({firstName, lastName, phone, emailAddress, password}) {\n        return axios({\n            method: \"POST\",\n            url: \"/signup\",\n            baseURL: this.domain,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: qs.stringify({firstName, lastName, phone, emailAddress, password}),\n            withCredentials: true\n        })\n        .then((response)=> {\n            this.setUser(response.data.user);\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n    login(emailAddress, password) {\n        return axios({\n            method: \"POST\",\n            url: \"/login\",\n            baseURL: this.domain,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: qs.stringify({emailAddress, password}),\n            withCredentials: true\n        })\n        .then((response)=> {\n            this.setUser(response.data.user)\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n    loggedIn(){\n        const user = this.getUser()\n        return !!user; \n    }\n\n    setUser(user){\n        localStorage.setItem('user', JSON.stringify(user));\n    }\n\n    getUser(){\n        try {\n            return JSON.parse(localStorage.getItem('user'));\n        } catch(error) {\n            return undefined;\n        }\n    }\n\n    logout(){\n       return axios({\n            baseURL: this.domain,\n            url: \"/logout\"\n        })\n        .then((res)=> {\n            localStorage.clear()\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }    \n}\n","import React, { Component } from 'react'; \nimport {Link, withRouter} from 'react-router-dom';\nimport './Nav.css'\nimport Auth from \"../utils/Auth\";\nconst auth = new Auth();\n\nclass Nav extends Component {\n\n    state = {\n        user: null,\n    }\n\n    render() {\n        return (\n            <nav className=\"nav\">\n                <Link to='/'>\n                    <div className=\"right-container\">\n                            <div><img src='./images/logo.png' alt=\"logo\"/></div>\n                            <div><h1>La Cagette</h1></div>\n                    </div>\n                </Link>\n                <div className=\"left-container\">\n                    <div className={this.props.location.pathname === '/our-products' ?  \"nav-links active\" : \"nav-links\"}><Link to='/our-products'>Our products</Link></div>\n                    <div className={this.props.location.pathname === '/ma-cagette' || this.props.location.pathname === '/confirm' ?  \"nav-links active\" : \"nav-links\"}><Link to='/ma-cagette'>Ma Cagette</Link></div>\n                    {auth.loggedIn() ?\n                    <div className=\"nav-links\"><Link to='/logout'>Logout</Link></div>\n                    :\n                    <div className={this.props.location.pathname === '/login' ?  \"nav-links active\" : \"nav-links\"}><Link to='/login'>Login</Link></div>\n                    }\n                </div>\n            </nav>\n        )\n    }\n}\n\nexport default withRouter(Nav);","import React from 'react';\nimport Nav from \"../components/Nav\";\n\nconst MainLayout = (props) => {\n    return (\n        <>\n            <Nav />\n            {props.children}\n        </>\n    );\n}\n\nexport default MainLayout;","import React, {Component} from 'react';\nimport './home.css'\nimport {Link} from 'react-router-dom';\n\n\nclass home extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n          user: null\n        };\n      }\n    \n      componentDidMount() {\n        const user = localStorage.getItem('user');\n        this.setState({ user });\n      } \n\n    render() {\n        return(\n            <div className=\"home\">\n                <div className=\"top-container\">\n                    <div><img src='./images/bike.png' alt=\"bike\"/></div>\n                    <div className=\"right-container\">\n                        <p className=\"p1\">Easy</p>\n                        <p className=\"p2\">Local</p>\n                        <p className=\"p3\">Natural</p>\n                        <p className=\"presentation-text\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse sed est nec odio sagittis maximus ut non dolor. Integer congue nisl quis rutrum ultricies. Sed ut leo velit. In hac habitasse platea dictumst. Vivamus convallis lorem vitae justo bibendum, quis volutpat mauris lobortis. Fusce commodo sollicitudin sem eu posuere.\n                        </p>\n                        {this.state.user === null ?\n                        <>\n                        <Link to='/signup'><button>Sign up</button></Link>\n                        <Link to='/login'><button>Login</button></Link>\n                        </>\n                        :\n                        <div/>\n                        }\n                        \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default home","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport './ProductItem.css'\n\nclass ProductItem extends Component {\n    \n    render() {\n        \n        return(\n            <div className=\"productItem\" style={{backgroundColor: this.props.color, opacity: 0.7}}>\n                <img src={this.props.image} alt=\"bottle\"/>\n                <p>{this.props.name}</p>\n                <Link to='#'>Read more</Link>\n            </div>\n        )\n    }\n}\n\nexport default ProductItem\n","import React, {Component} from 'react';\nimport './products.css'\nimport ProductItem from '../components/ProductItem'\nimport axios from 'axios';\n\nclass Products extends Component {\n\nconstructor(){\n    super()\n    this.state = {\n        products: []\n        }\n    }\n    \ncomponentDidMount() {\n    axios.get(process.env.REACT_APP_API, {withCredentials: true})\n    .then(response => {\n        this.setState({products: response.data})\n    })\n    .catch(err => {\n        console.log(err)\n    })\n}\n\nrender() {\n    let allProducts = this.state.products.map((product, index) => {\n        return (\n            <ProductItem\n            key={index.toString()}\n            name={product.name}\n            color={product.color}\n            image={product.image1}/>\n        )\n    })\n    return(\n        <div>\n            <div className=\"products-top-container\">\n                <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris bibendum enim eget leo rhoncus, vel dapibus nisl consectetur.\n                </p>\n            </div>\n            <div className=\"products\">\n                <div className=\"all-products\">\n                    {allProducts}\n                </div>\n            </div>\n        </div>\n    )\n}\n}\n\nexport default Products\n\n","import React, {Component} from 'react';\nimport './productCard.css'\n\nclass ProductCard extends Component {\n\n    constructor(){\n        super();\n\n        this.state = {\n            active: false,\n            id: null\n        }\n    }\n\n    componentDidMount() {\n        this.setState({id: this.props.id})\n    }\n\n    changeButtonClass = () => {\n        this.setState(prevState => ({\n            active: !prevState.active\n            }));        \n        this.props.buttonChange(this.state.active, this.state.id)\n    }\n    \n    render() {\n        let btnClass = this.state.active ? \"btn active\" : \"btn not-active\";\n        \n        return(\n            <div className=\"product-card\">\n                <button className={btnClass} onClick={() => {\n                    this.changeButtonClass()\n                    this.props.total(this.state.active, this.props.price)\n                }}><img src='./images/logo.png' alt='bottle'/></button>\n                <p>{this.props.name}</p>\n            </div>\n        )\n    }\n}\n\nexport default ProductCard\n\n\n","import React, {Component} from 'react';\nimport './ticketLine.css'\nimport { FaEnvira } from 'react-icons/fa';\n\nclass TicketLine extends Component {\n    render () {\n        return(\n            <div className=\"ticketLine\">\n                <div><span className=\"bullet\">< FaEnvira /></span> {this.props.name}<span className=\"quantity\">    x1</span></div>\n            </div>\n        )\n    }\n\n}\n\nexport default TicketLine\n\n\n","import React, { Component } from \"react\";\nimport ProductCard from \"../components/ProductCard\";\nimport \"./MaCagette.css\";\nimport TicketLine from \"../components/TicketLine\";\nimport axios from \"axios\";\n\nclass MaCagette extends Component {\n  constructor() {\n    super();\n    this.state = {\n      products: [],\n      activeButtons: [],\n      total: 0,\n    };\n    this.changeButton = this.changeButton.bind(this);\n    this.total = this.total.bind(this);\n  }\n\n// Get all the products from the database\n  componentDidMount() {\n    axios\n      .get(process.env.REACT_APP_API, { withCredentials: true })\n      .then(response => {\n        this.setState({ products: response.data });\n      });\n  }\n\n// Add a product to the activeButtons state when the button is active\n  changeButton(activity, id) {\n    if (!activity) {\n      this.setState({ activeButtons: [...this.state.activeButtons, id] });\n    } else {\n      let items = [...this.state.activeButtons];\n      for (var i = 0; i < items.length; i++) {\n        if (items[i] === id) {\n          items.splice(i, 1);\n          i--;\n        }\n      }\n      this.setState({ activeButtons: items });\n    }\n    this.total()\n  };\n\n// Return an object with the product's datas from its id\n  getProduct(id) {\n    let found = this.state.products.find(oneProduct => {\n        return (oneProduct._id === id);\n    })\n    return found;\n  }\n\n// Calculates the total and saves it in the state\n  total(activity, itemPrice) {\n    let total\n    if (!activity) {\n      total = this.state.total + Number(itemPrice)\n    } else {\n      total = this.state.total - Number(itemPrice)\n    }\n    this.setState({total: total})\n}\n\n// Stores the data in the local storage and redirect to another page\nconfirmButton = () =>  {\n  const { total, activeButtons } = this.state\n  localStorage.setItem('total', total)\n  localStorage.setItem('list', activeButtons)\n  this.props.history.push(\"/confirm\");\n}\n\n  render() {\n\n// Load all the products on the page \n    let allProducts = this.state.products.map((product, index) => {\n      return (\n        <ProductCard\n          key={index.toString()}\n          name={product.name}\n          image={product.image}\n          id={product._id}\n          price={product.price}\n          buttonChange={this.changeButton}\n          total={this.total}\n        />\n      );\n    });\n\n// Map over all the products whose buttons are active\n    let allItems = this.state.activeButtons.map((item, index) => {\n      const foundProduct = this.getProduct(item)\n      return (\n      <TicketLine \n        key={index.toString()} \n        id={foundProduct._id}\n        name={foundProduct.name} \n      />\n      )\n    });\n\n    return (\n      <div className=\"ma-cagette\">\n        <div className=\"top-container\">\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris\n            bibendum enim eget leo rhoncus, vel dapibus nisl consectetur.\n          </p>\n        </div>\n        <div className=\"central-container\">\n          <div className=\"left-container\">\n            <div className=\"cagette\">{allProducts}</div>\n          </div>\n          <div className=\"right-container\">\n            <div className=\"ticket\">\n            {allItems}\n            {this.state.activeButtons.length > 0 ? \n            <div className=\"total\">\n              <div>Total</div>\n              <div className=\"totalPrice\">{this.state.total}€</div>\n                <button className=\"button\" onClick={this.confirmButton}>Confirm</button>\n            </div>\n            :\n            <p></p>}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MaCagette;\n","import React, { Component } from \"react\";\nimport './signup.css'\nimport Auth from \"../utils/Auth\";\nconst auth = new Auth();\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: {\n        firstName: \"\",\n        lastName: \"\",\n        phone: \"\",\n        emailAddress: \"\",\n        password: \"\",\n      }\n    };\n\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n    auth.signup(this.state.user)\n      .then(() => {\n        this.setState({ error: \"\" });\n        this.props.history.push(\"/\");\n      })\n      .catch(({ response }) => {\n        this.setState({ error: response.data.message });\n        console.log(this.state.error)\n      });\n  };\n\n  handleFormChange = e => {\n    let user = this.state.user;\n    user[e.target.name] = e.target.value;\n    this.setState({\n      user: user\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"signup\">\n        <div className=\"top-container\"></div>\n        <h1>Sign up</h1>\n        <form onSubmit={this.handleFormSubmit}>\n        <div>\n            <label>First name</label>\n            <input\n              type=\"text\"\n              name=\"firstName\"\n              placeholder=\"First name\"\n              value={this.state.firstName}\n              onChange={this.handleFormChange}\n              required\n            />\n          </div>\n\n          <div>\n            <label>Last Name</label>\n            <input\n              type=\"text\"\n              name=\"lastName\"\n              placeholder=\"Last Name\"\n              value={this.state.lastName}\n              onChange={this.handleFormChange}\n              required\n            />\n          </div>\n\n          <div>\n            <label>Phone number</label>\n            <input\n              type=\"tel\"\n              name=\"phone\"\n              placeholder=\"00 00 00 00 00\"\n              value={this.state.phoneNumber}\n              onChange={this.handleFormChange}\n              pattern='^\\+?\\d{10,13}'\n              required\n            />\n          </div>\n\n          <div>\n            <label>Email Address</label>\n            <input\n              type=\"email\"\n              name=\"emailAddress\"\n              placeholder=\"bonjour@la-cagette.fr\"\n              value={this.state.emailAddress}\n              onChange={this.handleFormChange}\n              required\n            />\n          </div>\n\n          <div>\n            <label>Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              value={this.state.password}\n              onChange={this.handleFormChange}\n              required\n            />\n          </div>\n\n          <div className=\"input\">\n            <input type=\"submit\" value=\"Submit\" className='button' />\n          </div>\n          <img src='./images/bottles.png' alt=\"bottles\"/>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component } from \"react\";\nimport './login.css'\nimport {Link} from 'react-router-dom';\nimport Auth from \"../utils/Auth\";\nconst auth = new Auth();\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: {\n        emailAddress: \"\",\n        password: \"\",\n      }\n    };\n\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n    auth.login(this.state.user.emailAddress, this.state.user.password)\n      .then(() => {\n        this.setState({ error: \"\" });\n        this.props.history.push(\"/ma-cagette\");\n      })\n      .catch(({ response }) => {\n        this.setState({ error: response });\n      });\n  };\n\n  handleFormChange = e => {\n    let user = this.state.user;\n    user[e.target.name] = e.target.value;\n    this.setState({\n      user: user\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"login\">\n        <h1>Login</h1>\n        <form onSubmit={this.handleFormSubmit}>\n          <div>\n            <label>Email Address</label>\n            <input\n              type=\"email\"\n              name=\"emailAddress\"\n              placeholder=\"bonjour@la-cagette.fr\"\n              value={this.state.emailAddress}\n              onChange={this.handleFormChange}\n            />\n          </div>\n\n          <div>\n            <label>Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              value={this.state.password}\n              onChange={this.handleFormChange}\n            />\n          </div>\n\n          <div className=\"input\">\n            <input type=\"submit\" value=\"Submit\" className=\"button\" />\n          </div>\n        </form>\n        <div>\n          Not a user yet? <Link to='/signup'>Sign up first!</Link>\n        </div>\n        <img src='./images/bottles.png' alt=\"bottles\"/>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react'\nimport Auth from \"./Auth\";\nconst auth = new Auth();\n\nexport default class Logout extends Component {\n\n    state = {\n        error: null\n    }\n\n    componentDidMount(){\n        auth.logout()\n            .then(()=> {\n                this.props.history.push(\"/\");\n            })\n            .catch((error)=> {\n                this.setState({error: error.message});\n                console.log(error)\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.error? \n                    <h1>{this.state.error}</h1>\n                    :\n                    <p>Loading</p>\n                }\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport axios from \"axios\";\nimport qs from \"querystring\";\nimport './addressForm.css'\n\nclass AddressForm extends Component {\n    constructor(props) {\n        super(props);\n        this.domain = process.env.REACT_APP_API;\n        this.state = {\n          address: {\n              firstName: \"\",\n              lastName: \"\",\n              number: \"\",\n              street: \"\",\n              postcode: \"\",\n              city: \"\"\n          }\n        }\n        this.saveAddress = this.saveAddress.bind(this)\n      }\n\n// sends the address datas to the backend\n    saveAddress = ({ firstName, lastName, number, street, postcode, city}) => {\n    return axios({\n        method: \"POST\",\n        url: \"/save-address\",\n        baseURL: this.domain,\n        headers: { 'content-type': 'application/x-www-form-urlencoded' },\n        data: qs.stringify({firstName, lastName, number, street, postcode, city}),\n        withCredentials: true\n    })\n    .then((res)=> {\n        this.props.addressEdit(res.data)\n    })\n    .catch(error => {\n        console.log(error)\n    })\n    }\n\n    handleFormSubmit = e => {\n        e.preventDefault();\n        this.saveAddress(this.state.address)\n          .then((res) => {\n            this.setState({ error: \"\" });\n          })\n          .catch((res) => {\n            this.setState({ error: res.data.message });\n            console.log(this.state.error)\n          });\n      };\n\n    handleFormChange = e => {\n    let address = this.state.address;\n    address[e.target.name] = e.target.value;\n    this.setState({\n        address: address\n    });\n    }\n\n    render() {\n        return(\n            <div className=\"address-form\">\n                <form onSubmit={this.handleFormSubmit}>\n                    <div>\n                        <label>First name</label>\n                        <input\n                        type=\"text\"\n                        name=\"firstName\"\n                        placeholder=\"First name\"\n                        value={this.state.firstName}\n                        onChange={this.handleFormChange}\n                        required\n                        />\n                    </div>\n\n                    <div>\n                        <label>Last name</label>\n                        <input\n                        type=\"text\"\n                        name=\"lastName\"\n                        placeholder=\"Last name\"\n                        value={this.state.lastName}\n                        onChange={this.handleFormChange}\n                        required\n                        />\n                    </div>\n\n                    <div>\n                        <label>Number</label>\n                        <input\n                        type=\"text\"\n                        name=\"number\"\n                        placeholder=\"Number\"\n                        value={this.state.number}\n                        onChange={this.handleFormChange}\n                        required\n                        />\n                    </div>\n\n                    <div>\n                        <label>Street</label>\n                        <input\n                        type=\"text\"\n                        name=\"street\"\n                        placeholder=\"Street\"\n                        value={this.state.street}\n                        onChange={this.handleFormChange}\n                        required\n                        />\n                    </div>\n\n                    <div>\n                        <label>Post code</label>\n                        <input\n                        type=\"text\"\n                        name=\"postcode\"\n                        placeholder=\"Post Code\"\n                        value={this.state.postcode}\n                        onChange={this.handleFormChange}\n                        required\n                        />\n                    </div>\n\n                    <div>\n                        <label>City</label>\n                        <input\n                        type=\"text\"\n                        name=\"city\"\n                        placeholder=\"City\"\n                        value={this.state.city}\n                        onChange={this.handleFormChange}\n                        required\n                        />\n                    </div>\n\n                    <div className=\"input\">\n                        <input type=\"submit\" value=\"Save\" className='button' />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddressForm ","import React, {Component} from 'react';\nimport './addressCard.css'\n\nclass AddressCard extends Component {\n\n    render() {\n        return(\n           <div className=\"addressCard\">\n               <div>\n                <p>{this.props.address.firstName} {this.props.address.lastName}</p>\n                <p>{this.props.address.number} {this.props.address.street}</p>\n                <p>{this.props.address.postcode} {this.props.address.city}</p>\n               </div>\n               <div>\n                <button onClick={this.props.addressChange}>Edit</button>\n               </div>\n           </div>\n        )\n    }\n}\n\nexport default AddressCard ","import React, { Component } from \"react\";\nimport {Link} from 'react-router-dom';\nimport './confirmation.css';\nimport axios from \"axios\";\nimport qs from \"querystring\";\nimport AddressForm from '../components/AddressForm';\nimport AddressCard from '../components/AddressCard'\n\nclass Confirmation extends Component {\n  constructor(props) {\n    super(props);\n    this.domain = process.env.REACT_APP_API;\n    this.state = {\n      total: undefined,\n      list: undefined,\n      user: undefined,\n      edit: undefined,\n    };\n    this.addressChange = this.addressChange.bind(this);\n    this.addressEdit = this.addressEdit.bind(this);\n  }\n\n// stores the localStorage datas in the state and get the user's\n  componentDidMount() {\n    var total = parseInt(localStorage.getItem('total'));\n    var list = localStorage.getItem('list');\n    var user = JSON.parse(localStorage.getItem('user'));\n    this.setState({total, list, user})\n  } \n\n// change the edit state to take off the form from the page once submitted\n  addressChange() {\n    this.setState({edit: true})\n  }\n\n// save changes button on the address form \n  addressEdit(updatedUser) {\n    this.setState({edit: false, user: updatedUser})\n  }\n\n// save the order in the database\n  orderButton = (user, list) => {\n    return axios({\n      method: \"POST\",\n      url: \"/order\",\n      baseURL: this.domain,\n      headers: { 'content-type': 'application/x-www-form-urlencoded' },\n      data: qs.stringify({user, list}),\n      withCredentials: true\n  })\n  .then((res)=> {\n      console.log(res)\n      this.props.history.push(\"/confirmed-order\");\n  })\n  .catch(error => {\n      console.log(error)\n  })\n}\n\n  render () {\n\n      return (\n        <div className=\"confirmation\">\n           <div className=\"top-container\">\n              <h1>Confirm your order</h1>\n          </div>\n          <div className=\"main-container\">\n            <div className=\"left-container\">\n              <h2>Delivery Address</h2>\n              {this.state.user !== undefined && this.state.user.address ? \n              <AddressCard addressChange={this.addressChange} address={this.state.user.address} />\n              :\n              <AddressForm addressEdit={this.addressEdit}/>\n              } \n            </div>\n            <div className=\"middle-container\">\n              {this.state.edit ? \n              <AddressForm addressEdit={this.addressEdit}/>\n              :\n              <div></div>\n              }\n            </div>\n            <div className=\"right-container\">\n              <h2>Order summary</h2>\n              <p>Total : {this.state.total}€</p>\n              <button onClick={() => {this.orderButton(this.state.user, this.state.list)}}>Place your order</button>\n              <Link to='/ma-cagette'>Modify your order</Link>\n            </div>\n       </div>\n       </div>\n      )\n  }\n}\n\nexport default Confirmation;","import React, {Component} from 'react';\nimport './ConfirmedOrder.css'\n\nclass ConfirmedOrder extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          user: undefined,\n        };\n      }\n    \n// stores the localStorage datas in the state\n    componentDidMount() {\n    var total = parseInt(localStorage.getItem('total'));\n    var list = localStorage.getItem('list');\n    var user = JSON.parse(localStorage.getItem('user'));\n    this.setState({total, list, user})\n    } \n\n    render() {\n        return (\n            <div className=\"confirmed-order\">\n               <div className=\"top-container\">\n                  <h1>Order confirmed</h1>\n              </div>\n              <div className=\"main-container\">\n                  <img src='./images/bike2.png' ald=\"bike\"/>\n                <div className=\"central-container\">\n                    <h2>Merci !</h2>\n                    <p></p>\n                </div>\n              </div>\n           </div>\n          )\n    }\n}\n\nexport default ConfirmedOrder","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport Auth from \"../utils/Auth\";\nconst auth = new Auth();\n\nconst ProtectedRoute  = ({component: Component, redirectUrl, ...rest}) => {\n  return (\n      <Route\n        {...rest}\n        render={ props  => {\n            var user = auth.getUser();\n            if(user){\n              return <Component {...props} />\n            } else {\n              return <Redirect to={{pathname: redirectUrl || '/', state: {from: props.location}}} />\n            }\n          }\n        }\n      />\n    )\n}\nexport default ProtectedRoute;","  import React, { Component } from 'react';\nimport {Route} from 'react-router-dom'\nimport MainLayout from './layout/MainLayout';\nimport Home from './pages/Home';\nimport Products from './pages/Products';\nimport MaCagette from './pages/MaCagette';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport Logout from './utils/Logout';\nimport Confirmation from './pages/Confirmation'\nimport ConfirmedOrder from './pages/ConfirmedOrder'\nimport ProtectedRoute from './components/ProtectedRoute'\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return(\n      <div className='app'>\n        <MainLayout>\n          <Route exact path='/' component={Home}/>\n          <Route path='/our-products' component={Products}/>\n          <Route path='/signup' component={Signup}/>\n          <Route path='/login' component={Login}/>\n          <Route path='/logout' component={Logout}/>\n          <Route path='/confirmed-order' component={ConfirmedOrder}/>\n          <ProtectedRoute redirectUrl='/login' path='/ma-cagette' component={MaCagette}/>\n          <ProtectedRoute redirectUrl='/login' path='/confirm' component={Confirmation}/>\n        </MainLayout>\n      </div>\n    ) \n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}